// bark_ft.cpp
// DM/RAL  10/07-11/16
/* -----------------------------------------------------------------------------
 Copyright (c) 2016 Refined Audiometrics Laboratory, LLC
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 1. Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright
 notice, this list of conditions and the following disclaimer in the
 documentation and/or other materials provided with the distribution.
 3. The names of the authors and contributors may not be used to endorse
 or promote products derived from this software without specific prior
 written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND
 ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE
 FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.
 ------------------------------------------------------------------------------- */

#include <memory.h>

#include "crescendo.h"

// -------------------------------------------------------------------------------------

// Overlapping integrated Bark filters with half-octave spacing at the audiology test freqs
// mapped back into linear FFT frequency space.
//
// Poor resolution in the low bands is okay. The most important bands are those above 1kHz.


// Widening of zBark ERB to ERBS narrower critical bands
static const Float64 erb_corr[11] = {
    1.7656471408430956,
    1.5228202413437684,
    1.377500488857015,
    1.2965004248294488,
    1.2511680396918075,
    1.2450925981903152,
    1.280018694958076,
    1.355985480009144,
    1.470871992963292,
    1.6195766260552696,
    1.7934642493495124 };

// ==========================================================================================================

#if 0
typedef struct {
    Float64  m_fmid;
    int      m_start;
    int      m_end;
    Float64  m_erb;
    Float64 *m_pcoffs;
} Bark_Band_T;
#endif

Float64 bark_filt_44_00250[] = {0.149, 1.000, 0.590, 0.014};
Float64 bark_filt_44_00500[] = {0.020, 0.133, 0.974, 1.000, 0.099};
Float64 bark_filt_44_00750[] = {0.063, 0.357, 1.000, 0.432, 0.034};
Float64 bark_filt_44_01000[] = {0.046, 0.209, 0.787, 1.000, 0.472, 0.062, 0.010};
Float64 bark_filt_44_01500[] = {0.020, 0.077, 0.256, 0.739, 1.000, 0.803, 0.338, 0.071, 0.017};
Float64 bark_filt_44_02000[] = {0.023, 0.066, 0.163, 0.377, 0.832, 1.000, 0.898, 0.709, 0.422, 0.144, 0.051, 0.019};
Float64 bark_filt_44_03000[] = {0.013, 0.029, 0.064, 0.129, 0.238, 0.420, 0.717, 0.991, 1.000, 0.897, 0.746, 0.562, 0.326, 0.157, 0.078, 0.041, 0.022, 0.013};
Float64 bark_filt_44_04000[] = {0.013, 0.024, 0.042, 0.071, 0.118, 0.189, 0.285, 0.415, 0.592, 0.839, 0.986, 1.000, 0.946, 0.857, 0.754, 0.639, 0.511, 0.367, 0.234, 0.152, 0.101, 0.067, 0.046, 0.031, 0.022, 0.015, 0.011};
Float64 bark_filt_44_06000[] = {0.015, 0.025, 0.037, 0.054, 0.077, 0.109, 0.151, 0.204, 0.267, 0.340, 0.427, 0.529, 0.651, 0.797, 0.927, 0.985, 1.000, 0.986, 0.951, 0.900, 0.836, 0.758, 0.668, 0.567, 0.454, 0.330, 0.241, 0.178, 0.132, 0.099, 0.075, 0.057, 0.043, 0.034, 0.026, 0.020, 0.016, 0.013, 0.010};
Float64 bark_filt_44_08000[] = {0.012, 0.016, 0.023, 0.031, 0.040, 0.051, 0.064, 0.080, 0.098, 0.120, 0.145, 0.176, 0.211, 0.252, 0.300, 0.355, 0.419, 0.491, 0.573, 0.665, 0.768, 0.881, 0.950, 0.987, 1.000, 0.996, 0.980, 0.954, 0.920, 0.880, 0.834, 0.784, 0.729, 0.670, 0.607, 0.541, 0.471, 0.398, 0.323, 0.264, 0.218, 0.180, 0.150, 0.126, 0.106, 0.089, 0.076, 0.065, 0.056, 0.048, 0.042, 0.036, 0.032, 0.028, 0.024, 0.021, 0.019, 0.017, 0.015, 0.013, 0.012, 0.010};
Float64 bark_filt_44_12000[] = {0.011, 0.014, 0.017, 0.020, 0.025, 0.030, 0.036, 0.043, 0.051, 0.061, 0.071, 0.084, 0.098, 0.113, 0.131, 0.151, 0.172, 0.197, 0.223, 0.252, 0.284, 0.319, 0.357, 0.399, 0.443, 0.491, 0.543, 0.597, 0.655, 0.716, 0.780, 0.849, 0.918, 0.963, 0.988, 1.000, 1.000, 0.992, 0.977, 0.958, 0.935, 0.908, 0.880, 0.849, 0.816, 0.782, 0.747, 0.711, 0.673, 0.634, 0.594, 0.553, 0.511, 0.467, 0.420, 0.374, 0.332, 0.297, 0.266, 0.238, 0.214, 0.192, 0.173, 0.155, 0.140, 0.126, 0.114, 0.103, 0.093, 0.084, 0.076, 0.068, 0.062, 0.056, 0.051, 0.046, 0.042, 0.038, 0.034, 0.031, 0.028, 0.025, 0.023, 0.021, 0.019, 0.017, 0.015, 0.014, 0.013, 0.011, 0.010};
Bark_Band_T bark_filters_44[] = {
 {0.25,  0,   4,   1.3701511100191622, bark_filt_44_00250},
 {0.5,   0,   5,   1.9771904019050477, bark_filt_44_00500},
 {0.75,  2,   7,   1.319037106654961,  bark_filt_44_00750},
 {1.0,   3,  10,   1.8922285978032758, bark_filt_44_01000},
 {1.5,   4,  13,   2.3824233844991487, bark_filt_44_01500},
 {2.0,   6,  18,   3.3773916134242015, bark_filt_44_02000},
 {3.0,   8,  26,   4.566998397711975,  bark_filt_44_03000},
 {4.0,  11,  38,   6.4343067717499745, bark_filt_44_04000},
 {6.0,  15,  54,   9.795654906146554,  bark_filt_44_06000},
 {8.0,  19,  81,  13.996056588568156,  bark_filt_44_08000},
 {12.0, 25, 116,  20.10983840071508,   bark_filt_44_12000},
};

Float64 bark_filt_48_00250[] = {0.136, 1.000, 0.260};
Float64 bark_filt_48_00500[] = {0.018, 0.132, 1.000, 0.638, 0.030};
Float64 bark_filt_48_00750[] = {0.011, 0.096, 0.597, 1.000, 0.149, 0.011};
Float64 bark_filt_48_01000[] = {0.011, 0.067, 0.331, 1.000, 0.768, 0.127, 0.017};
Float64 bark_filt_48_01500[] = {0.033, 0.132, 0.458, 1.000, 0.884, 0.464, 0.084, 0.018};
Float64 bark_filt_48_02000[] = {0.012, 0.041, 0.116, 0.295, 0.709, 1.000, 0.901, 0.694, 0.366, 0.111, 0.037, 0.013};
Float64 bark_filt_48_03000[] = {0.023, 0.055, 0.118, 0.232, 0.430, 0.770, 1.000, 0.966, 0.831, 0.653, 0.427, 0.196, 0.091, 0.044, 0.023, 0.012};
Float64 bark_filt_48_04000[] = {0.012, 0.023, 0.043, 0.077, 0.132, 0.216, 0.333, 0.495, 0.724, 0.954, 1.000, 0.952, 0.859, 0.747, 0.621, 0.480, 0.319, 0.197, 0.124, 0.080, 0.052, 0.034, 0.023, 0.015, 0.011};
Float64 bark_filt_48_06000[] = {0.010, 0.017, 0.028, 0.044, 0.065, 0.095, 0.137, 0.191, 0.258, 0.337, 0.431, 0.544, 0.681, 0.848, 0.959, 1.000, 0.998, 0.968, 0.918, 0.850, 0.767, 0.670, 0.558, 0.432, 0.304, 0.217, 0.156, 0.113, 0.083, 0.062, 0.046, 0.035, 0.026, 0.020, 0.015, 0.012};
Float64 bark_filt_48_08000[] = {0.014, 0.021, 0.029, 0.039, 0.051, 0.065, 0.082, 0.102, 0.127, 0.157, 0.192, 0.234, 0.283, 0.340, 0.407, 0.485, 0.573, 0.675, 0.789, 0.904, 0.966, 0.995, 1.000, 0.988, 0.962, 0.928, 0.885, 0.835, 0.780, 0.720, 0.655, 0.585, 0.512, 0.435, 0.352, 0.281, 0.227, 0.185, 0.151, 0.125, 0.103, 0.086, 0.072, 0.061, 0.052, 0.044, 0.038, 0.033, 0.028, 0.024, 0.021, 0.018, 0.016, 0.014, 0.012, 0.011};
Float64 bark_filt_48_12000[] = {0.011, 0.014, 0.017, 0.022, 0.027, 0.033, 0.040, 0.048, 0.058, 0.069, 0.083, 0.098, 0.115, 0.134, 0.156, 0.181, 0.208, 0.238, 0.272, 0.309, 0.350, 0.394, 0.442, 0.494, 0.551, 0.611, 0.675, 0.743, 0.814, 0.892, 0.951, 0.984, 0.999, 1.000, 0.991, 0.975, 0.953, 0.927, 0.897, 0.865, 0.830, 0.794, 0.756, 0.716, 0.676, 0.633, 0.590, 0.545, 0.499, 0.450, 0.399, 0.350, 0.309, 0.274, 0.243, 0.216, 0.192, 0.171, 0.153, 0.136, 0.122, 0.109, 0.097, 0.087, 0.078, 0.070, 0.063, 0.056, 0.050, 0.045, 0.041, 0.036, 0.033, 0.029, 0.026, 0.024, 0.021, 0.019, 0.017, 0.015, 0.014, 0.012, 0.011};
Bark_Band_T bark_filters_48[] = {
 {0.25,  0,   3,  1.0862726967686434, bark_filt_48_00250},
 {0.5,   0,   5,  1.4258388065887815, bark_filt_48_00500},
 {0.75,  1,   7,  1.388427711196666,  bark_filt_48_00750},
 {1.0,   2,   9,  1.7196071198726215, bark_filt_48_01000},
 {1.5,   4,  12,  2.231446740828873,  bark_filt_48_01500},
 {2.0,   5,  17,  3.0453296422477543, bark_filt_48_02000},
 {3.0,   8,  24,  4.1318808617402745, bark_filt_48_03000},
 {4.0,  10,  35,  5.847417727579706,  bark_filt_48_04000},
 {6.0,  13,  49,  9.066665872697266,  bark_filt_48_06000},
 {8.0,  18,  74, 12.861149719822503,  bark_filt_48_08000},
 {12.0, 23, 106, 18.46749966781418,   bark_filt_48_12000},
};

// Bark_Band_T *bark_filts = bark_filters_48;


Float64 TCrescendo_bark_channel::compute_bark_power(UInt32 bix)
{
    int fft_ix, filt_ix;
    
    Float64     *pwr_spectrum = get_PowerSpectrum();
    Bark_Band_T *pfilt        = &(get_pBarkFilts())[bix];
    Float64     *pfcoffs      = pfilt->m_pcoffs;
    Float64     *InvATH       = get_InvATH();
    Float64     pwrsum        = 0.0;
    
    for(fft_ix = pfilt->m_start, filt_ix = 0;
        fft_ix < pfilt->m_end;
        ++fft_ix, ++filt_ix) {
        
        // Don't worry about Nyquist contributions. But DC level
        // will be accounted for properly with get_FT_halfAmpl().
        
        Float64 pwr     = get_FT_power(pwr_spectrum, fft_ix);
        Float64 cfilt   = pfcoffs[filt_ix];
        Float64 athfilt = InvATH[fft_ix]; // InvATH already expressed in Power space
        cfilt  *= cfilt;
        pwrsum += athfilt * cfilt * pwr;
    }
    // This power level needs to receive the 0 dBFS power correction, determined
    // from self-calibration, to bring it into dBFS space.
    return (pwrsum / (pfilt->m_erb * erb_corr[bix]));
}

// ===================================================================================

Float64 ztst[NBKCHANS+1] = {
#define ZTST(fkHz, zBark)   zBark
 ZTST( 0.25, 2.0000000093983674), // standard audiology test bands
 ZTST( 0.5,  4.435719436571687),
 ZTST( 0.75, 6.370879438093643),
 ZTST( 1.0,  8.0),
 ZTST( 1.5, 10.575708573531964),
 ZTST( 2.0, 12.523786226421466),
 ZTST( 3.0, 15.218550046092963),
 ZTST( 4.0, 16.99999997765679),
 ZTST( 6.0, 19.180403908785117),
 ZTST( 8.0, 20.69339041156427),
 ZTST(12.0, 22.548667583274235), // extended audiology band, equal to 8 kHz band
 ZTST(16.0, 23.658641990393957), // dummy 12th band, always zero gain, needed for spline
};
#undef ZTST

#if 0
typedef struct {
  Float64 fkHz;
  int     gix;
  Float64 a;
  Float64 b;
  Float64 c;
} TGainInterp;
#endif

#define GINTERP(bin, fkHz, zBark, gix, a, b, c)  { fkHz, gix, a, b, c }


TGainInterp ginterp_44[128] = {
  GINTERP(0, 0.0, 0, 0, 1.8211126401037867, -0.8211126401037867, 0.9887881879849206),
  GINTERP(1, 0.172265625, 1.2231868692154598, 0, 1.3189255427027605, -0.3189255427027604, 0.9887881879849206),
  GINTERP(2, 0.34453125, 2.9436676634103116, 0, 0.6125712824374516, 0.3874287175625484, 0.9887881879849206),
  GINTERP(3, 0.516796875, 4.5743937953903675, 1, 0.928339590158118, 0.07166040984188209, 0.6241407052484093),
  GINTERP(4, 0.6890625, 5.917670669802088, 1, 0.23419705240658, 0.76580294759342, 0.6241407052484093),
  GINTERP(5, 0.861328125, 7.1398165190354455, 2, 0.5280048027617973, 0.4719951972382027, 0.4423389675376809),
  GINTERP(6, 1.03359375, 8.2043385951546, 3, 0.9206670361490477, 0.07933296385095233, 1.1057124426276775),
  GINTERP(7, 1.205859375, 9.193392774551539, 3, 0.536673990677801, 0.46332600932219903, 1.1057124426276775),
  GINTERP(8, 1.378125, 10.037237438868207, 3, 0.2090574765317388, 0.7909425234682612, 1.1057124426276775),
  GINTERP(9, 1.5503906250000002, 10.790731780361093, 4, 0.88962287693707, 0.11037712306293003, 0.6325010902812452),
  GINTERP(10, 1.72265625, 11.506747231300178, 4, 0.5220731286623799, 0.4779268713376202, 0.6325010902812452),
  GINTERP(11, 1.894921875, 12.163027810076719, 4, 0.18518687682169643, 0.8148131231783036, 0.6325010902812452),
  GINTERP(12, 2.0671875, 12.741910471076903, 5, 0.9190562664293055, 0.08094373357069454, 1.2102920073017527),
  GINTERP(13, 2.2394531250000003, 13.267893659878423, 5, 0.7238691465185001, 0.27613085348149985, 1.2102920073017527),
  GINTERP(14, 2.41171875, 13.758659097520877, 5, 0.541750983115861, 0.45824901688413894, 1.2102920073017527),
  GINTERP(15, 2.583984375, 14.22411494831446, 5, 0.3690249551813148, 0.6309750448186852, 1.2102920073017527),
  GINTERP(16, 2.75625, 14.662204056741594, 5, 0.20645445262775944, 0.7935455473722406, 1.2102920073017527),
  GINTERP(17, 2.928515625, 15.063640909800377, 5, 0.057485236799516684, 0.9425147632004833, 1.2102920073017527),
  GINTERP(18, 3.1007812500000003, 15.4272298109201, 6, 0.8828595959225474, 0.1171404040774526, 0.5289273097781264),
  GINTERP(19, 3.273046875, 15.763686503231986, 6, 0.6939928271458737, 0.30600717285412627, 0.5289273097781264),
  GINTERP(20, 3.4453125, 16.082611088635965, 6, 0.5149675400731048, 0.4850324599268953, 0.5289273097781264),
  GINTERP(21, 3.617578125, 16.387719588952475, 6, 0.3436977811477587, 0.6563022188522414, 0.5289273097781264),
  GINTERP(22, 3.78984375, 16.675770589114546, 6, 0.18200308793277262, 0.8179969120672274, 0.5289273097781264),
  GINTERP(23, 3.9621093750000003, 16.943903226016755, 6, 0.03148937876170902, 0.968510621238291, 0.5289273097781264),
  GINTERP(24, 4.134375, 17.190651397923176, 7, 0.9125614215125137, 0.08743857848748621, 0.7923602171466446),
  GINTERP(25, 4.306640625, 17.41868096629672, 7, 0.8079800799004846, 0.19201992009951544, 0.7923602171466446),
  GINTERP(26, 4.4789062500000005, 17.631846202893933, 7, 0.7102159759406724, 0.28978402405932757, 0.7923602171466446),
  GINTERP(27, 4.651171875, 17.833322501161487, 7, 0.617812776977766, 0.382187223022234, 0.7923602171466446),
  GINTERP(28, 4.8234375, 18.025727156532735, 7, 0.5295701111925865, 0.4704298888074135, 0.7923602171466446),
  GINTERP(29, 4.995703125, 18.210932491785265, 7, 0.44462927403463454, 0.5553707259653654, 0.7923602171466446),
  GINTERP(30, 5.16796875, 18.38975687996874, 7, 0.3626149345672974, 0.6373850654327027, 0.7923602171466446),
  GINTERP(31, 5.3402343750000005, 18.562789833305893, 7, 0.2832567244362001, 0.7167432755637999, 0.7923602171466446),
  GINTERP(32, 5.5125, 18.73054885497202, 7, 0.20631730084081348, 0.7936826991591865, 0.7923602171466446),
  GINTERP(33, 5.684765625, 18.89349005430213, 7, 0.1315874780754555, 0.8684125219245446, 0.7923602171466446),
  GINTERP(34, 5.85703125, 19.052014892250778, 7, 0.05888313385488126, 0.9411168661451187, 0.7923602171466446),
  GINTERP(35, 6.029296875, 19.206360064118695, 8, 0.9828444237368279, 0.01715557626317214, 0.3815213595986487),
  GINTERP(36, 6.2015625000000005, 19.35656434338122, 8, 0.8835677421625907, 0.11643225783740929, 0.3815213595986487),
  GINTERP(37, 6.373828125, 19.502663974084438, 8, 0.7870040051861844, 0.2129959948138156, 0.3815213595986487),
  GINTERP(38, 6.54609375, 19.644707143977854, 8, 0.6931213633830343, 0.3068786366169656, 0.3815213595986487),
  GINTERP(39, 6.718359375, 19.78275135781667, 8, 0.6018818093055532, 0.39811819069444676, 0.3815213595986487),
  GINTERP(40, 6.890625, 19.916861299886097, 8, 0.5132425902357971, 0.48675740976420296, 0.3815213595986487),
  GINTERP(41, 7.0628906250000005, 20.04710773056906, 8, 0.42715693749288264, 0.5728430625071174, 0.3815213595986487),
  GINTERP(42, 7.23515625, 20.173594914888035, 8, 0.34355593769107657, 0.6564440623089234, 0.3815213595986487),
  GINTERP(43, 7.407421875, 20.29646642056703, 8, 0.2623447005430285, 0.7376552994569715, 0.3815213595986487),
  GINTERP(44, 7.5796875, 20.415861512890043, 8, 0.18343117943513937, 0.8165688205648607, 0.3815213595986487),
  GINTERP(45, 7.751953125, 20.531912179108773, 8, 0.1067281381287166, 0.8932718618712834, 0.3815213595986487),
  GINTERP(46, 7.9242187500000005, 20.644743591385712, 8, 0.03215284478030704, 0.967847155219693, 0.3815213595986487),
  GINTERP(47, 8.096484375000001, 20.754474537493632, 9, 0.9670754716002556, 0.0329245283997444, 0.5736755639780209),
  GINTERP(48, 8.26875, 20.86121782131268, 9, 0.9095405191701197, 0.09045948082988029, 0.5736755639780209),
  GINTERP(49, 8.441015625, 20.96508063514116, 9, 0.8535581487662679, 0.1464418512337321, 0.5736755639780209),
  GINTERP(50, 8.61328125, 21.06616099752493, 9, 0.7990755280963842, 0.20092447190361587, 0.5736755639780209),
  GINTERP(51, 8.785546875, 21.164506913459892, 9, 0.7460667823226621, 0.2539332176773379, 0.5736755639780209),
  GINTERP(52, 8.957812500000001, 21.260138189464446, 9, 0.694521235671855, 0.305478764328145, 0.5736755639780209),
  GINTERP(53, 9.130078125, 21.35307813153244, 9, 0.6444263261428749, 0.3555736738571252, 0.5736755639780209),
  GINTERP(54, 9.30234375, 21.443353454572265, 9, 0.5957676543193966, 0.40423234568060346, 0.5736755639780209),
  GINTERP(55, 9.474609375, 21.530993711909243, 9, 0.5485292908697979, 0.4514707091302021, 0.5736755639780209),
  GINTERP(56, 9.646875, 21.61603080241828, 9, 0.5026940422041444, 0.49730595779585557, 0.5736755639780209),
  GINTERP(57, 9.819140625000001, 21.698498544507594, 9, 0.4582436800982466, 0.5417563199017534, 0.5736755639780209),
  GINTERP(58, 9.99140625, 21.77843230776878, 9, 0.4151591402353888, 0.5848408597646112, 0.5736755639780209),
  GINTERP(59, 10.163671875, 21.855868694449704, 9, 0.37342069389340577, 0.6265793061065943, 0.5736755639780209),
  GINTERP(60, 10.3359375, 21.930845264037306, 9, 0.33300809639537405, 0.666991903604626, 0.5736755639780209),
  GINTERP(61, 10.508203125, 22.00340029782825, 9, 0.293900714006751, 0.706099285993249, 0.5736755639780209),
  GINTERP(62, 10.680468750000001, 22.073598410019887, 9, 0.25606371947997797, 0.743936280520022, 0.5736755639780209),
  GINTERP(63, 10.852734375, 22.14158950622281, 9, 0.21941631323810726, 0.7805836867618927, 0.5736755639780209),
  GINTERP(64, 11.025, 22.207531721879186, 9, 0.1838732598001151, 0.816126740199885, 0.5736755639780209),
  GINTERP(65, 11.197265625, 22.271572015556178, 9, 0.14935534805436337, 0.8506446519456367, 0.5736755639780209),
  GINTERP(66, 11.36953125, 22.333847058183025, 9, 0.1157889119571359, 0.8842110880428641, 0.5736755639780209),
  GINTERP(67, 11.541796875000001, 22.3944840416211, 9, 0.08310539471092908, 0.916894605289071, 0.5736755639780209),
  GINTERP(68, 11.7140625, 22.45360141483867, 9, 0.05124095196403723, 0.9487590480359628, 0.5736755639780209),
  GINTERP(69, 11.886328125, 22.511309555014617, 9, 0.020136090083610517, 0.9798639099163895, 0.5736755639780209),
  GINTERP(70, 12.05859375, 22.567711380068087, 10, 0.9828430307296283, 0.01715696927037173, 0.20534053074346312),
  GINTERP(71, 12.230859375, 22.622902908386532, 10, 0.9331197866940632, 0.06688021330593684, 0.20534053074346312),
  GINTERP(72, 12.403125000000001, 22.676973770889774, 10, 0.8844061747797576, 0.1155938252202424, 0.20534053074346312),
  GINTERP(73, 12.575390625, 22.73000768000949, 10, 0.8366267766427018, 0.16337322335729818, 0.20534053074346312),
  GINTERP(74, 12.74765625, 22.78208285967264, 10, 0.7897111186517376, 0.21028888134826243, 0.20534053074346312),
  GINTERP(75, 12.919921875, 22.833272439944363, 10, 0.7435933163462292, 0.25640668365377084, 0.20534053074346312),
  GINTERP(76, 13.0921875, 22.88364481960339, 10, 0.6982117477839965, 0.30178825221600347, 0.20534053074346312),
  GINTERP(77, 13.264453125000001, 22.933263999585158, 10, 0.6535087531352054, 0.3464912468647946, 0.20534053074346312),
  GINTERP(78, 13.43671875, 22.98218988992788, 10, 0.6094303581479905, 0.3905696418520095, 0.20534053074346312),
  GINTERP(79, 13.608984375, 23.030478592591166, 10, 0.5659260193510359, 0.4340739806489641, 0.20534053074346312),
  GINTERP(80, 13.78125, 23.078182662280412, 10, 0.5229483890712231, 0.47705161092877696, 0.20534053074346312),
  GINTERP(81, 13.953515625, 23.12535134720008, 10, 0.4804530985337891, 0.519546901466211, 0.20534053074346312),
  GINTERP(82, 14.125781250000001, 23.172030811471395, 10, 0.4383985574814032, 0.5616014425185968, 0.20534053074346312),
  GINTERP(83, 14.298046875, 23.21826434078294, 10, 0.39674576889908076, 0.6032542311009193, 0.20534053074346312),
  GINTERP(84, 14.4703125, 23.264092532693074, 10, 0.3554581575666247, 0.6445418424333753, 0.20534053074346312),
  GINTERP(85, 14.642578125, 23.309553472869336, 10, 0.3145014112807087, 0.6854985887192913, 0.20534053074346312),
  GINTERP(86, 14.81484375, 23.354682898430262, 10, 0.2738433336967103, 0.7261566663032897, 0.20534053074346312),
  GINTERP(87, 14.987109375000001, 23.399514349447486, 10, 0.23345370783717617, 0.7665462921628239, 0.20534053074346312),
  GINTERP(88, 15.159375, 23.44407930956932, 10, 0.19330416940099055, 0.8066958305990095, 0.20534053074346312),
  GINTERP(89, 15.331640625, 23.488407336640354, 10, 0.15336808908535624, 0.8466319109146437, 0.20534053074346312),
  GINTERP(90, 15.50390625, 23.53252618411335, 10, 0.11362046320316868, 0.8863795367968314, 0.20534053074346312),
  GINTERP(91, 15.676171875, 23.576461913979117, 10, 0.07403781194206936, 0.9259621880579306, 0.20534053074346312),
  GINTERP(92, 15.848437500000001, 23.62023900187652, 10, 0.03459808466853618, 0.9654019153314638, 0.20534053074346312),
  GINTERP(93, 16.020703125, 23.66388043498753, 10, -0.004719428267869875, 1.00471942826787, 0.20534053074346312),
  GINTERP(94, 16.192968750000002, 23.707407803269767, 10, -0.04393417772789307, 1.043934177727893, 0.20534053074346312),
  GINTERP(95, 16.365234375, 23.75084138453253, 10, -0.083064432429414, 1.083064432429414, 0.20534053074346312),
  GINTERP(96, 16.5375, 23.794200223819118, 10, -0.12212735046470323, 1.1221273504647032, 0.20534053074346312),
  GINTERP(97, 16.709765625, 23.83750220752014, 10, -0.1611390460707174, 1.1611390460707174, 0.20534053074346312),
  GINTERP(98, 16.88203125, 23.88076413260681, 10, -0.20011465200286865, 1.2001146520028687, 0.20534053074346312),
  GINTERP(99, 17.054296875000002, 23.92400177134187, 10, -0.23906837783449242, 1.2390683778344925, 0.20534053074346312),
  GINTERP(100, 17.2265625, 23.96722993179629, 10, -0.2780135644776616, 1.2780135644776616, 0.20534053074346312),
  GINTERP(101, 17.398828125, 24.010462514473854, 10, -0.31696273519750645, 1.3169627351975064, 0.20534053074346312),
  GINTERP(102, 17.57109375, 24.053712565321213, 10, -0.35592764337010885, 1.3559276433701089, 0.20534053074346312),
  GINTERP(103, 17.743359375, 24.09699232537956, 10, -0.3949193172147823, 1.3949193172147823, 0.20534053074346312),
  GINTERP(104, 17.915625000000002, 24.140313277313467, 10, -0.43394810171290516, 1.4339481017129052, 0.20534053074346312),
  GINTERP(105, 18.087890625, 24.183686189034426, 10, -0.4730236979093135, 1.4730236979093135, 0.20534053074346312),
  GINTERP(106, 18.26015625, 24.227121154619884, 10, -0.5121551997771519, 1.5121551997771519, 0.20534053074346312),
  GINTERP(107, 18.432421875, 24.270627632713026, 10, -0.5513511288130635, 1.5513511288130635, 0.20534053074346312),
  GINTERP(108, 18.6046875, 24.314214482574556, 10, -0.5906194665170234, 1.5906194665170235, 0.20534053074346312),
  GINTERP(109, 18.776953125000002, 24.357889997945147, 10, -0.6299676848997561, 1.629967684899756, 0.20534053074346312),
  GINTERP(110, 18.94921875, 24.4016619388649, 10, -0.6694027751495737, 1.6694027751495737, 0.20534053074346312),
  GINTERP(111, 19.121484375, 24.445537561585745, 10, -0.7089312745811027, 1.7089312745811028, 0.20534053074346312),
  GINTERP(112, 19.29375, 24.489523646702477, 10, -0.7485592919791537, 1.7485592919791538, 0.20534053074346312),
  GINTERP(113, 19.466015625, 24.533626525619248, 10, -0.788292531442948, 1.788292531442948, 0.20534053074346312),
  GINTERP(114, 19.638281250000002, 24.577852105459496, 10, -0.8281363148280163, 1.8281363148280163, 0.20534053074346312),
  GINTERP(115, 19.810546875, 24.622205892519972, 10, -0.868095602876441, 1.868095602876441, 0.20534053074346312),
  GINTERP(116, 19.9828125, 24.666693014362, 10, -0.9081750151193485, 1.9081750151193487, 0.20534053074346312),
  GINTERP(117, 20.155078125, 24.71131824062685, 10, -0.9483788486299307, 1.9483788486299308, 0.20534053074346312),
  GINTERP(118, 20.32734375, 24.756086002655764, 10, -0.9887110956995573, 1.9887110956995573, 0.20534053074346312),
  GINTERP(119, 20.499609375000002, 24.801000411989627, 10, -1.0291754605045187, 2.0291754605045185, 0.20534053074346312),
  GINTERP(120, 20.671875, 24.84606527781829, 10, -1.06977537482651, 2.06977537482651, 0.20534053074346312),
  GINTERP(121, 20.844140625, 24.89128412344448, 10, -1.110514012885316, 2.1105140128853157, 0.20534053074346312),
  GINTERP(122, 21.01640625, 24.936660201822825, 10, -1.151394305338268, 2.1513943053382683, 0.20534053074346312),
  GINTERP(123, 21.188671875, 24.982196510230793, 10, -1.1924189524975935, 2.192418952497593, 0.20534053074346312),
  GINTERP(124, 21.360937500000002, 25.027895804124104, 10, -1.2335904368130704, 2.2335904368130706, 0.20534053074346312),
  GINTERP(125, 21.533203125, 25.073760610225744, 10, -1.2749110346642003, 2.2749110346642003, 0.20534053074346312),
  GINTERP(126, 21.70546875, 25.119793238894776, 10, -1.3163828275035346, 2.3163828275035346, 0.20534053074346312),
  GINTERP(127, 21.877734375, 25.16599579581771, 10, -1.3580077123896884, 2.3580077123896883, 0.20534053074346312),
};


TGainInterp ginterp_48[128] = {
  GINTERP(0, 0.0, 0, 0, 1.8211126401037867, -0.8211126401037867, 0.9887881879849206),
  GINTERP(1, 0.1875, 1.376318636822188, 0, 1.2560563280065343, -0.25605632800653433, 0.9887881879849206),
  GINTERP(2, 0.375, 3.259160000028264, 0, 0.48304391031968475, 0.5169560896803153, 0.9887881879849206),
  GINTERP(3, 0.5625, 4.940836062534892, 1, 0.7389793993437529, 0.2610206006562471, 0.6241407052484093),
  GINTERP(4, 0.75, 6.370879438093643, 1, 0.0, 1.0, 0.6241407052484093),
  GINTERP(5, 0.9375, 7.618402804110199, 2, 0.23423508659375386, 0.7657649134062461, 0.4423389675376809),
  GINTERP(6, 1.125, 8.746724004516978, 3, 0.7100898711172804, 0.28991012888271956, 1.1057124426276775),
  GINTERP(7, 1.3125, 9.730027161093084, 3, 0.32832961815988055, 0.6716703818401194, 1.1057124426276775),
  GINTERP(8, 1.5, 10.575708573531964, 3, 0.0, 1.0, 1.1057124426276775),
  GINTERP(9, 1.6875, 11.363827150560967, 4, 0.5954378020506422, 0.4045621979493578, 0.6325010902812452),
  GINTERP(10, 1.875, 12.09145042702237, 4, 0.2219294486325177, 0.7780705513674823, 0.6325010902812452),
  GINTERP(11, 2.0625, 12.72696603498643, 5, 0.9246019977402943, 0.07539800225970572, 1.2102920073017527),
  GINTERP(12, 2.25, 13.298827568597835, 5, 0.7123898812509477, 0.28761011874905224, 1.2102920073017527),
  GINTERP(13, 2.4375, 13.829760325946236, 5, 0.5153660257751369, 0.48463397422486304, 1.2102920073017527),
  GINTERP(14, 2.625, 14.331302001348794, 5, 0.3292489079255666, 0.6707510920744334, 1.2102920073017527),
  GINTERP(15, 2.8125, 14.79766759091903, 5, 0.15618528499660514, 0.8438147150033949, 1.2102920073017527),
  GINTERP(16, 3.0, 15.218550046092963, 5, 0.0, 1.0, 1.2102920073017527),
  GINTERP(17, 3.1875, 15.599326555802703, 6, 0.7862547226486013, 0.21374527735139876, 0.5289273097781264),
  GINTERP(18, 3.375, 15.95406070228408, 6, 0.5871280785615696, 0.4128719214384305, 0.5289273097781264),
  GINTERP(19, 3.5625, 16.291855459857587, 6, 0.3975101995583817, 0.6024898004416184, 0.5289273097781264),
  GINTERP(20, 3.75, 16.610829546479796, 6, 0.2184571254468903, 0.7815428745531097, 0.5289273097781264),
  GINTERP(21, 3.9375, 16.90690016995363, 6, 0.052260692851149385, 0.9477393071488506, 0.5289273097781264),
  GINTERP(22, 4.125, 17.177742835328925, 7, 0.9184816835382622, 0.08151831646173782, 0.7923602171466446),
  GINTERP(23, 4.3125, 17.426155947980284, 7, 0.8045518244397193, 0.19544817556028077, 0.7923602171466446),
  GINTERP(24, 4.5, 17.657087370094488, 7, 0.6986396038564903, 0.30136039614350974, 0.7923602171466446),
  GINTERP(25, 4.6875, 17.874573617882213, 7, 0.5988937518687902, 0.40110624813120977, 0.7923602171466446),
  GINTERP(26, 4.875, 18.081870197406815, 7, 0.503821193722498, 0.49617880627750194, 0.7923602171466446),
  GINTERP(27, 5.0625, 18.280995881969165, 7, 0.4124960581732764, 0.5875039418267236, 0.7923602171466446),
  GINTERP(28, 5.25, 18.472842503115114, 7, 0.32450932396909116, 0.6754906760309088, 0.7923602171466446),
  GINTERP(29, 5.4375, 18.658128602772678, 7, 0.2395314457822358, 0.7604685542177642, 0.7923602171466446),
  GINTERP(30, 5.625, 18.837479020006015, 7, 0.15727585328725907, 0.842724146712741, 0.7923602171466446),
  GINTERP(31, 5.8125, 19.011439587739354, 7, 0.07749221079340402, 0.9225077892065959, 0.7923602171466446),
  GINTERP(32, 6.0, 19.180403908785117, 7, 0.0, 1.0, 0.7923602171466446),
  GINTERP(33, 6.1875, 19.344457204873578, 8, 0.8915698879090346, 0.1084301120909654, 0.3815213595986487),
  GINTERP(34, 6.375, 19.503643897310525, 8, 0.786356330389161, 0.21364366961083908, 0.3815213595986487),
  GINTERP(35, 6.5625, 19.658025532926747, 8, 0.684318648405453, 0.3156813515945471, 0.3815213595986487),
  GINTERP(36, 6.75, 19.80767673336946, 8, 0.585407521195909, 0.41459247880409095, 0.3815213595986487),
  GINTERP(37, 6.9375, 19.952681958500193, 8, 0.48956712548558407, 0.510432874514416, 0.3815213595986487),
  GINTERP(38, 7.125, 20.093137845200833, 8, 0.3967335896657729, 0.6032664103342271, 0.3815213595986487),
  GINTERP(39, 7.3125, 20.229200472441946, 8, 0.3068037542104107, 0.6931962457895894, 0.3815213595986487),
  GINTERP(40, 7.5, 20.3610546769293, 8, 0.21965545232856612, 0.7803445476714339, 0.3815213595986487),
  GINTERP(41, 7.6875, 20.48887534414787, 8, 0.13517309443324957, 0.8648269055667505, 0.3815213595986487),
  GINTERP(42, 7.875, 20.612827498450528, 8, 0.05324760859780194, 0.946752391402198, 0.3815213595986487),
  GINTERP(43, 8.0625, 20.73306698134797, 9, 0.9786142090310246, 0.021385790968975385, 0.5736755639780209),
  GINTERP(44, 8.25, 20.849741078311223, 9, 0.915726518317019, 0.08427348168298102, 0.5736755639780209),
  GINTERP(45, 8.4375, 20.96298909775485, 9, 0.8546854937356355, 0.1453145062643645, 0.5736755639780209),
  GINTERP(46, 8.625, 21.07293766650942, 9, 0.7954228830426819, 0.2045771169573181, 0.5736755639780209),
  GINTERP(47, 8.8125, 21.179648223241604, 9, 0.7379055706112304, 0.26209442938876965, 0.5736755639780209),
  GINTERP(48, 9.0, 21.283146864085744, 9, 0.6821194905460355, 0.31788050945396457, 0.5736755639780209),
  GINTERP(49, 9.1875, 21.383464568599745, 9, 0.6280479447718044, 0.37195205522819564, 0.5736755639780209),
  GINTERP(50, 9.375, 21.4806368974093, 9, 0.575671766003866, 0.42432823399613395, 0.5736755639780209),
  GINTERP(51, 9.5625, 21.57470315613779, 9, 0.5249697683924847, 0.47503023160751534, 0.5736755639780209),
  GINTERP(52, 9.75, 21.665705682251577, 9, 0.4759191319153959, 0.5240808680846041, 0.5736755639780209),
  GINTERP(53, 9.9375, 21.75368923643436, 9, 0.42849573042887185, 0.5715042695711281, 0.5736755639780209),
  GINTERP(54, 10.125, 21.838700483029058, 9, 0.3826744117111174, 0.6173255882888826, 0.5736755639780209),
  GINTERP(55, 10.3125, 21.920787546510866, 9, 0.3384292365246248, 0.6615707634753751, 0.5736755639780209),
  GINTERP(56, 10.5, 21.999999632972717, 9, 0.29573368263666145, 0.7042663173633386, 0.5736755639780209),
  GINTERP(57, 10.6875, 22.07641564653074, 9, 0.2545452204902786, 0.7454547795097214, 0.5736755639780209),
  GINTERP(58, 10.875, 22.150224726402105, 9, 0.2147619034760691, 0.785238096523931, 0.5736755639780209),
  GINTERP(59, 11.0625, 22.22162953790755, 9, 0.17627449437393844, 0.8237255056260615, 0.5736755639780209),
  GINTERP(60, 11.25, 22.290817223986857, 9, 0.13898212257402137, 0.8610178774259787, 0.5736755639780209),
  GINTERP(61, 11.4375, 22.35796074179445, 9, 0.10279156364761077, 0.8972084363523892, 0.5736755639780209),
  GINTERP(62, 11.625, 22.42322006822797, 9, 0.06761658956361903, 0.932383410436381, 0.5736755639780209),
  GINTERP(63, 11.8125, 22.48674328890037, 9, 0.03337738172932362, 0.9666226182706764, 0.5736755639780209),
  GINTERP(64, 12.0, 22.548667583274235, 9, 0.0, 1.0, 0.5736755639780209),
  GINTERP(65, 12.1875, 22.609120117128843, 10, 0.9455370020544196, 0.0544629979455804, 0.20534053074346312),
  GINTERP(66, 12.375, 22.66821885219046, 10, 0.8922936707825094, 0.10770632921749056, 0.20534053074346312),
  GINTERP(67, 12.5625, 22.726073281593223, 10, 0.8401713614466666, 0.15982863855333346, 0.20534053074346312),
  GINTERP(68, 12.75, 22.782785098827088, 10, 0.7890784561777727, 0.21092154382222728, 0.20534053074346312),
  GINTERP(69, 12.9375, 22.838448806947963, 10, 0.7389298151245822, 0.2610701848754177, 0.20534053074346312),
  GINTERP(70, 13.125, 22.893152274056043, 10, 0.6896462760112522, 0.3103537239887478, 0.20534053074346312),
  GINTERP(71, 13.3125, 22.94697724037544, 10, 0.6411541972983139, 0.3588458027016861, 0.20534053074346312),
  GINTERP(72, 13.5, 22.999999781678238, 10, 0.5933850406738951, 0.406614959326105, 0.20534053074346312),
  GINTERP(73, 13.6875, 23.05229073327846, 10, 0.5462749890683687, 0.45372501093163137, 0.20534053074346312),
  GINTERP(74, 13.875, 23.103916078365743, 10, 0.4997645967961325, 0.5002354032038675, 0.20534053074346312),
  GINTERP(75, 14.0625, 23.154937304047128, 10, 0.4537984687898298, 0.5462015312101702, 0.20534053074346312),
  GINTERP(76, 14.25, 23.205411728111383, 10, 0.40832496621130504, 0.5916750337886949, 0.20534053074346312),
  GINTERP(77, 14.4375, 23.255392799216626, 10, 0.36329593600605964, 0.6367040639939403, 0.20534053074346312),
  GINTERP(78, 14.625, 23.304930372925142, 10, 0.31866646221750494, 0.6813335377824951, 0.20534053074346312),
  GINTERP(79, 14.8125, 23.354070965763114, 10, 0.27439463709904377, 0.7256053629009562, 0.20534053074346312),
  GINTERP(80, 15.0, 23.402857989264615, 10, 0.23044135025876614, 0.7695586497412339, 0.20534053074346312),
  GINTERP(81, 15.1875, 23.451331965764983, 10, 0.18677009424651855, 0.8132299057534814, 0.20534053074346312),
  GINTERP(82, 15.375, 23.49953072753555, 10, 0.14334678514911434, 0.8566532148508856, 0.20534053074346312),
  GINTERP(83, 15.5625, 23.547489600697397, 10, 0.10013959689844554, 0.8998604031015545, 0.20534053074346312),
  GINTERP(84, 15.75, 23.59524157521404, 10, 0.05711880812138257, 0.9428811918786174, 0.20534053074346312),
  GINTERP(85, 15.9375, 23.642817462139327, 10, 0.014256660471742585, 0.9857433395282574, 0.20534053074346312),
  GINTERP(86, 16.125, 23.69024603918687, 10, -0.028472772516371647, 1.0284727725163716, 0.20534053074346312),
  GINTERP(87, 16.3125, 23.737554185587854, 10, -0.07109370692488937, 1.0710937069248894, 0.20534053074346312),
  GINTERP(88, 16.5, 23.784767007115658, 10, -0.11362876108917124, 1.1136287610891713, 0.20534053074346312),
  GINTERP(89, 16.6875, 23.83190795207534, 10, -0.15609906009544197, 1.156099060095442, 0.20534053074346312),
  GINTERP(90, 16.875, 23.87899891898456, 10, -0.1985243327928699, 1.1985243327928699, 0.20534053074346312),
  GINTERP(91, 17.0625, 23.92606035660762, 10, -0.2409230019164046, 1.2409230019164046, 0.20534053074346312),
  GINTERP(92, 17.25, 23.973111356945793, 10, -0.2833122678637743, 1.2833122678637743, 0.20534053074346312),
  GINTERP(93, 17.4375, 24.02016974173446, 10, -0.3257081866226388, 1.3257081866226388, 0.20534053074346312),
  GINTERP(94, 17.625, 24.06725214295003, 10, -0.36812574230101086, 1.368125742301011, 0.20534053074346312),
  GINTERP(95, 17.8125, 24.11437407778628, 10, -0.4105789146750736, 1.4105789146750736, 0.20534053074346312),
  GINTERP(96, 18.0, 24.161550018520796, 10, -0.4530807421333593, 1.4530807421333594, 0.20534053074346312),
  GINTERP(97, 18.1875, 24.208793457656917, 10, -0.49564338036455363, 1.4956433803645537, 0.20534053074346312),
  GINTERP(98, 18.375, 24.25611696869415, 10, -0.53827815710687, 1.53827815710687, 0.20534053074346312),
  GINTERP(99, 18.5625, 24.30353226285123, 10, -0.5809956232510833, 1.5809956232510834, 0.20534053074346312),
  GINTERP(100, 18.75, 24.351050242039048, 10, -0.6238056005649935, 1.6238056005649935, 0.20534053074346312),
  GINTERP(101, 18.9375, 24.39868104835695, 10, -0.666717226285715, 1.6667172262857149, 0.20534053074346312),
  GINTERP(102, 19.125, 24.446434110363527, 10, -0.7097389948060292, 1.7097389948060293, 0.20534053074346312),
  GINTERP(103, 19.3125, 24.494318186353194, 10, -0.752878796663193, 1.7528787966631932, 0.20534053074346312),
  GINTERP(104, 19.5, 24.542341404851644, 10, -0.7961439550221735, 1.7961439550221734, 0.20534053074346312),
  GINTERP(105, 19.6875, 24.590511302526224, 10, -0.8395412598299267, 1.8395412598299266, 0.20534053074346312),
  GINTERP(106, 19.875, 24.638834859692345, 10, -0.8830769998038924, 1.8830769998038926, 0.20534053074346312),
  GINTERP(107, 20.0625, 24.687318533583007, 10, -0.9267569924052282, 1.9267569924052284, 0.20534053074346312),
  GINTERP(108, 20.25, 24.735968289535524, 10, -0.9705866119356093, 1.9705866119356093, 0.20534053074346312),
  GINTERP(109, 20.4375, 24.784789630238162, 10, -1.014570815886153, 2.0145708158861533, 0.20534053074346312),
  GINTERP(110, 20.625, 24.833787623168355, 10, -1.0587141696571092, 2.0587141696571094, 0.20534053074346312),
  GINTERP(111, 20.8125, 24.882966926344605, 10, -1.1030208697582986, 2.1030208697582986, 0.20534053074346312),
  GINTERP(112, 21.0, 24.932331812504856, 10, -1.1474947655919412, 2.147494765591941, 0.20534053074346312),
  GINTERP(113, 21.1875, 24.98188619181599, 10, -1.192139379912123, 2.1921393799121227, 0.20534053074346312),
  GINTERP(114, 21.375, 25.031633633211613, 10, -1.236957928048484, 2.2369579280484837, 0.20534053074346312),
  GINTERP(115, 21.5625, 25.081577384447666, 10, -1.2819533359747377, 2.281953335974738, 0.20534053074346312),
  GINTERP(116, 21.75, 25.13172039095986, 10, -1.3271282572977528, 2.327128257297753, 0.20534053074346312),
  GINTERP(117, 21.9375, 25.18206531360005, 10, -1.3724850892366345, 2.3724850892366343, 0.20534053074346312),
  GINTERP(118, 22.125, 25.23261454532373, 10, -1.4180259876568535, 2.4180259876568538, 0.20534053074346312),
  GINTERP(119, 22.3125, 25.283370226895837, 10, -1.4637528812199332, 2.4637528812199334, 0.20534053074346312),
  GINTERP(120, 22.5, 25.33433426167653, 10, -1.5096674847042975, 2.5096674847042975, 0.20534053074346312),
  GINTERP(121, 22.6875, 25.385508329545768, 10, -1.5557713115502055, 2.555771311550205, 0.20534053074346312),
  GINTERP(122, 22.875, 25.436893900019904, 10, -1.6020656856767908, 2.602065685676791, 0.20534053074346312),
  GINTERP(123, 23.0625, 25.488492244610985, 10, -1.6485517526168152, 2.648551752616815, 0.20534053074346312),
  GINTERP(124, 23.25, 25.540304448475517, 10, -1.6952304900112927, 2.6952304900112925, 0.20534053074346312),
  GINTERP(125, 23.4375, 25.592331421396445, 10, -1.7421027175033954, 2.7421027175033954, 0.20534053074346312),
  GINTERP(126, 23.625, 25.64457390813891, 10, -1.7891691060681814, 2.789169106068181, 0.20534053074346312),
  GINTERP(127, 23.8125, 25.697032498218274, 10, -1.8364301868128173, 2.8364301868128173, 0.20534053074346312),
};

#undef GINTERP

// TGainInterp *pgainInterp = ginterp_48;
// UInt32 bin16k; // Cached index

#define USE_CUBIC_SPLINE 0
#if USE_CUBIC_SPLINE

inline Float64 delydelx(Float64 x1, Float64 x2, Float64 y1, Float64 y2) {
    return (y2 - y1) / (x2 - x1);
}

void TCrescendo_bark_channel::compute_spline() {
    // We fit over the audiology bands 0.25-12 kHz, and a 12th dummy band
    // at 16 kHz, whose gain is always zero.
    // This guarantees proper spline behavior above 12 kHz.
    //
    // Using natural spline end conditions of Der2 = 0.
    Float64 u[NBKCHANS];
    
    m_d2ydx2[0] = 0.0;
    u[0]  = 0.0;
    for(int ix = 1; ix < NBKCHANS; ++ix) {
        Float64 sig = delydelx(ztst[ix-1], ztst[ix+1], ztst[ix-1], ztst[ix]);
        Float64 p = 2.0 + sig * m_d2ydx2[ix-1];
        m_d2ydx2[ix] = (sig - 1.0) / p;
        u[ix] = delydelx(ztst[ix], ztst[ix+1], m_gains[ix], m_gains[ix+1]) -
            delydelx(ztst[ix-1], ztst[ix], m_gains[ix-1], m_gains[ix]);
        u[ix] = (6.0 * u[ix]/(ztst[ix+1] - ztst[ix-1]) - sig * u[ix-1]) / p;
    }
    for(int ix = NBKCHANS; --ix > 0;) {
        m_d2ydx2[ix] = m_d2ydx2[ix] * m_d2ydx2[ix+1] + u[ix];
    }
}

inline Float64 cubic(Float64 c, Float64 d2ydx2) {
    return d2ydx2 * (c*c*c - c);
}

/*
(:DOMAIN
 (0 1)
 :NODES
 (-1.0 -0.4781640625 0.5214453125 1.0)
 :COFFS
 #(1.41399972326929 0.49752394360425767 0.08600027673071109)
 :ORDER
 (2 0)
 :ERR
 0.0024760563957433313
 :DERR
 8.967671548465349E-13)
 */
inline Float64 fast_ampl20(Float64 x) {
    Float64 z  = 0.16609640474436813 * x;
    Float64 zi = round(z);
    Float64 zf = 2.0 * (z - zi);
    Float64 y  = 1.0302293605616478 + 0.3535533905932742 * zf;
    return scalb(y, zi);
}

Float64 TCrescendo_bark_channel::gain_at_bin(int bix) {
    TGainInterp *pinterp = &(get_pGainInterp())[bix];
    int gix   = pinterp->gix;
    Float64 a = pinterp->a;
    Float64 b = pinterp->b;
    Float64 c = pinterp->c;
    Float64 dbgain = a * m_gains[gix] + b * m_gains[gix+1] +
        c * (cubic(a, m_d2ydx2[gix]) + cubic(b, m_d2ydx2[gix+1]));
    Float64 maxg = get_MaxGain();
    if(dbgain < 0.0)
        dbgain = 0.0;
    else if (dbgain > maxg)
        dbgain = maxg;
    return ampl20(dbgain);
}
#endif

#define ZTERP(ix, fkhz, zbark, cell)  cell
Float64 zterp_44[128] = {
 ZTERP(0, 0.0, 0.0, 0.0),
 ZTERP(1, 0.172265625, 1.2231868692154598, 0.6115934317337399),
 ZTERP(2, 0.34453125, 2.9436676634103116, 1.3874287175625484),
 ZTERP(3, 0.516796875, 4.5743937953903675, 2.0716604098418823),
 ZTERP(4, 0.6890625, 5.917670669802088, 2.76580294759342),
 ZTERP(5, 0.861328125, 7.1398165190354455, 3.471995197238203),
 ZTERP(6, 1.03359375, 8.2043385951546, 4.079332963850952),
 ZTERP(7, 1.205859375, 9.193392774551539, 4.4633260093221985),
 ZTERP(8, 1.378125, 10.037237438868207, 4.790942523468261),
 ZTERP(9, 1.5503906250000002, 10.790731780361093, 5.11037712306293),
 ZTERP(10, 1.72265625, 11.506747231300178, 5.477926871337621),
 ZTERP(11, 1.894921875, 12.163027810076719, 5.814813123178304),
 ZTERP(12, 2.0671875, 12.741910471076903, 6.080943733570694),
 ZTERP(13, 2.2394531250000003, 13.267893659878423, 6.276130853481499),
 ZTERP(14, 2.41171875, 13.758659097520877, 6.458249016884139),
 ZTERP(15, 2.583984375, 14.22411494831446, 6.630975044818685),
 ZTERP(16, 2.75625, 14.662204056741594, 6.79354554737224),
 ZTERP(17, 2.928515625, 15.063640909800377, 6.942514763200483),
 ZTERP(18, 3.1007812500000003, 15.4272298109201, 7.117140404077452),
 ZTERP(19, 3.273046875, 15.763686503231986, 7.306007172854127),
 ZTERP(20, 3.4453125, 16.082611088635965, 7.485032459926895),
 ZTERP(21, 3.617578125, 16.387719588952475, 7.656302218852241),
 ZTERP(22, 3.78984375, 16.675770589114546, 7.817996912067228),
 ZTERP(23, 3.9621093750000003, 16.943903226016755, 7.968510621238291),
 ZTERP(24, 4.134375, 17.190651397923176, 8.087438578487486),
 ZTERP(25, 4.306640625, 17.41868096629672, 8.192019920099515),
 ZTERP(26, 4.4789062500000005, 17.631846202893933, 8.289784024059328),
 ZTERP(27, 4.651171875, 17.833322501161487, 8.382187223022234),
 ZTERP(28, 4.8234375, 18.025727156532735, 8.470429888807413),
 ZTERP(29, 4.995703125, 18.210932491785265, 8.555370725965365),
 ZTERP(30, 5.16796875, 18.38975687996874, 8.637385065432703),
 ZTERP(31, 5.3402343750000005, 18.562789833305893, 8.7167432755638),
 ZTERP(32, 5.5125, 18.73054885497202, 8.793682699159186),
 ZTERP(33, 5.684765625, 18.89349005430213, 8.868412521924544),
 ZTERP(34, 5.85703125, 19.052014892250778, 8.94111686614512),
 ZTERP(35, 6.029296875, 19.206360064118695, 9.017155576263173),
 ZTERP(36, 6.2015625000000005, 19.35656434338122, 9.11643225783741),
 ZTERP(37, 6.373828125, 19.502663974084438, 9.212995994813817),
 ZTERP(38, 6.54609375, 19.644707143977854, 9.306878636616967),
 ZTERP(39, 6.718359375, 19.78275135781667, 9.398118190694447),
 ZTERP(40, 6.890625, 19.916861299886097, 9.486757409764204),
 ZTERP(41, 7.0628906250000005, 20.04710773056906, 9.572843062507119),
 ZTERP(42, 7.23515625, 20.173594914888035, 9.656444062308923),
 ZTERP(43, 7.407421875, 20.29646642056703, 9.737655299456972),
 ZTERP(44, 7.5796875, 20.415861512890043, 9.81656882056486),
 ZTERP(45, 7.751953125, 20.531912179108773, 9.893271861871283),
 ZTERP(46, 7.9242187500000005, 20.644743591385712, 9.967847155219694),
 ZTERP(47, 8.096484375000001, 20.754474537493632, 10.032924528399743),
 ZTERP(48, 8.26875, 20.86121782131268, 10.09045948082988),
 ZTERP(49, 8.441015625, 20.96508063514116, 10.146441851233732),
 ZTERP(50, 8.61328125, 21.06616099752493, 10.200924471903616),
 ZTERP(51, 8.785546875, 21.164506913459892, 10.253933217677338),
 ZTERP(52, 8.957812500000001, 21.260138189464446, 10.305478764328145),
 ZTERP(53, 9.130078125, 21.35307813153244, 10.355573673857127),
 ZTERP(54, 9.30234375, 21.443353454572265, 10.404232345680605),
 ZTERP(55, 9.474609375, 21.530993711909243, 10.451470709130203),
 ZTERP(56, 9.646875, 21.61603080241828, 10.497305957795856),
 ZTERP(57, 9.819140625000001, 21.698498544507594, 10.541756319901755),
 ZTERP(58, 9.99140625, 21.77843230776878, 10.584840859764612),
 ZTERP(59, 10.163671875, 21.855868694449704, 10.626579306106596),
 ZTERP(60, 10.3359375, 21.930845264037306, 10.666991903604626),
 ZTERP(61, 10.508203125, 22.00340029782825, 10.706099285993249),
 ZTERP(62, 10.680468750000001, 22.073598410019887, 10.743936280520023),
 ZTERP(63, 10.852734375, 22.14158950622281, 10.780583686761892),
 ZTERP(64, 11.025, 22.207531721879186, 10.816126740199886),
 ZTERP(65, 11.197265625, 22.271572015556178, 10.850644651945636),
 ZTERP(66, 11.36953125, 22.333847058183025, 10.884211088042865),
 ZTERP(67, 11.541796875000001, 22.3944840416211, 10.91689460528907),
 ZTERP(68, 11.7140625, 22.45360141483867, 10.948759048035962),
 ZTERP(69, 11.886328125, 22.511309555014617, 10.97986390991639),
 ZTERP(70, 12.05859375, 22.567711380068087, 11.017156969270373),
 ZTERP(71, 12.230859375, 22.622902908386532, 11.066880213305938),
 ZTERP(72, 12.403125000000001, 22.676973770889774, 11.115593825220243),
 ZTERP(73, 12.575390625, 22.73000768000949, 11.163373223357297),
 ZTERP(74, 12.74765625, 22.78208285967264, 11.210288881348264),
 ZTERP(75, 12.919921875, 22.833272439944363, 11.256406683653772),
 ZTERP(76, 13.0921875, 22.88364481960339, 11.301788252216003),
 ZTERP(77, 13.264453125000001, 22.933263999585158, 11.346491246864794),
 ZTERP(78, 13.43671875, 22.98218988992788, 11.390569641852009),
 ZTERP(79, 13.608984375, 23.030478592591166, 11.434073980648965),
 ZTERP(80, 13.78125, 23.078182662280412, 11.477051610928776),
 ZTERP(81, 13.953515625, 23.12535134720008, 11.51954690146621),
 ZTERP(82, 14.125781250000001, 23.172030811471395, 11.561601442518598),
 ZTERP(83, 14.298046875, 23.21826434078294, 11.60325423110092),
 ZTERP(84, 14.4703125, 23.264092532693074, 11.644541842433375),
 ZTERP(85, 14.642578125, 23.309553472869336, 11.685498588719291),
 ZTERP(86, 14.81484375, 23.354682898430262, 11.72615666630329),
 ZTERP(87, 14.987109375000001, 23.399514349447486, 11.766546292162826),
 ZTERP(88, 15.159375, 23.44407930956932, 11.80669583059901),
 ZTERP(89, 15.331640625, 23.488407336640354, 11.846631910914644),
 ZTERP(90, 15.50390625, 23.53252618411335, 11.88637953679683),
 ZTERP(91, 15.676171875, 23.576461913979117, 11.92596218805793),
 ZTERP(92, 15.848437500000001, 23.62023900187652, 11.965401915331464),
 ZTERP(93, 16.020703125, 23.66388043498753, 12.00471942826787),
 ZTERP(94, 16.192968750000002, 23.707407803269767, 12.043934177727893),
 ZTERP(95, 16.365234375, 23.75084138453253, 12.083064432429414),
 ZTERP(96, 16.5375, 23.794200223819118, 12.122127350464702),
 ZTERP(97, 16.709765625, 23.83750220752014, 12.161139046070718),
 ZTERP(98, 16.88203125, 23.88076413260681, 12.200114652002869),
 ZTERP(99, 17.054296875000002, 23.92400177134187, 12.239068377834493),
 ZTERP(100, 17.2265625, 23.96722993179629, 12.27801356447766),
 ZTERP(101, 17.398828125, 24.010462514473854, 12.316962735197507),
 ZTERP(102, 17.57109375, 24.053712565321213, 12.355927643370109),
 ZTERP(103, 17.743359375, 24.09699232537956, 12.394919317214783),
 ZTERP(104, 17.915625000000002, 24.140313277313467, 12.433948101712904),
 ZTERP(105, 18.087890625, 24.183686189034426, 12.473023697909312),
 ZTERP(106, 18.26015625, 24.227121154619884, 12.512155199777152),
 ZTERP(107, 18.432421875, 24.270627632713026, 12.551351128813064),
 ZTERP(108, 18.6046875, 24.314214482574556, 12.590619466517023),
 ZTERP(109, 18.776953125000002, 24.357889997945147, 12.629967684899756),
 ZTERP(110, 18.94921875, 24.4016619388649, 12.669402775149575),
 ZTERP(111, 19.121484375, 24.445537561585745, 12.708931274581105),
 ZTERP(112, 19.29375, 24.489523646702477, 12.748559291979153),
 ZTERP(113, 19.466015625, 24.533626525619248, 12.788292531442947),
 ZTERP(114, 19.638281250000002, 24.577852105459496, 12.828136314828015),
 ZTERP(115, 19.810546875, 24.622205892519972, 12.868095602876443),
 ZTERP(116, 19.9828125, 24.666693014362, 12.90817501511935),
 ZTERP(117, 20.155078125, 24.71131824062685, 12.94837884862993),
 ZTERP(118, 20.32734375, 24.756086002655764, 12.988711095699559),
 ZTERP(119, 20.499609375000002, 24.801000411989627, 13.029175460504519),
 ZTERP(120, 20.671875, 24.84606527781829, 13.06977537482651),
 ZTERP(121, 20.844140625, 24.89128412344448, 13.110514012885315),
 ZTERP(122, 21.01640625, 24.936660201822825, 13.151394305338269),
 ZTERP(123, 21.188671875, 24.982196510230793, 13.192418952497592),
 ZTERP(124, 21.360937500000002, 25.027895804124104, 13.23359043681307),
 ZTERP(125, 21.533203125, 25.073760610225744, 13.274911034664202),
 ZTERP(126, 21.70546875, 25.119793238894776, 13.316382827503534),
 ZTERP(127, 21.877734375, 25.16599579581771, 13.35800771238969),
};
Float64 zterp_48[128] = {
 ZTERP(0, 0.0, 0.0, 0.0),
 ZTERP(1, 0.1875, 1.376318636822188, 0.688159315177307),
 ZTERP(2, 0.375, 3.259160000028264, 1.5169560896803152),
 ZTERP(3, 0.5625, 4.940836062534892, 2.261020600656247),
 ZTERP(4, 0.75, 6.370879438093643, 3.0),
 ZTERP(5, 0.9375, 7.618402804110199, 3.765764913406246),
 ZTERP(6, 1.125, 8.746724004516978, 4.2899101288827195),
 ZTERP(7, 1.3125, 9.730027161093084, 4.671670381840119),
 ZTERP(8, 1.5, 10.575708573531964, 5.0),
 ZTERP(9, 1.6875, 11.363827150560967, 5.404562197949358),
 ZTERP(10, 1.875, 12.09145042702237, 5.778070551367482),
 ZTERP(11, 2.0625, 12.72696603498643, 6.075398002259705),
 ZTERP(12, 2.25, 13.298827568597835, 6.287610118749052),
 ZTERP(13, 2.4375, 13.829760325946236, 6.484633974224863),
 ZTERP(14, 2.625, 14.331302001348794, 6.6707510920744335),
 ZTERP(15, 2.8125, 14.79766759091903, 6.843814715003394),
 ZTERP(16, 3.0, 15.218550046092963, 7.0),
 ZTERP(17, 3.1875, 15.599326555802703, 7.213745277351398),
 ZTERP(18, 3.375, 15.95406070228408, 7.41287192143843),
 ZTERP(19, 3.5625, 16.291855459857587, 7.602489800441618),
 ZTERP(20, 3.75, 16.610829546479796, 7.78154287455311),
 ZTERP(21, 3.9375, 16.90690016995363, 7.947739307148851),
 ZTERP(22, 4.125, 17.177742835328925, 8.081518316461738),
 ZTERP(23, 4.3125, 17.426155947980284, 8.19544817556028),
 ZTERP(24, 4.5, 17.657087370094488, 8.30136039614351),
 ZTERP(25, 4.6875, 17.874573617882213, 8.40110624813121),
 ZTERP(26, 4.875, 18.081870197406815, 8.496178806277502),
 ZTERP(27, 5.0625, 18.280995881969165, 8.587503941826724),
 ZTERP(28, 5.25, 18.472842503115114, 8.675490676030908),
 ZTERP(29, 5.4375, 18.658128602772678, 8.760468554217765),
 ZTERP(30, 5.625, 18.837479020006015, 8.84272414671274),
 ZTERP(31, 5.8125, 19.011439587739354, 8.922507789206595),
 ZTERP(32, 6.0, 19.180403908785117, 9.0),
 ZTERP(33, 6.1875, 19.344457204873578, 9.108430112090965),
 ZTERP(34, 6.375, 19.503643897310525, 9.213643669610839),
 ZTERP(35, 6.5625, 19.658025532926747, 9.315681351594547),
 ZTERP(36, 6.75, 19.80767673336946, 9.414592478804093),
 ZTERP(37, 6.9375, 19.952681958500193, 9.510432874514417),
 ZTERP(38, 7.125, 20.093137845200833, 9.603266410334227),
 ZTERP(39, 7.3125, 20.229200472441946, 9.69319624578959),
 ZTERP(40, 7.5, 20.3610546769293, 9.780344547671433),
 ZTERP(41, 7.6875, 20.48887534414787, 9.864826905566752),
 ZTERP(42, 7.875, 20.612827498450528, 9.946752391402198),
 ZTERP(43, 8.0625, 20.73306698134797, 10.021385790968976),
 ZTERP(44, 8.25, 20.849741078311223, 10.084273481682981),
 ZTERP(45, 8.4375, 20.96298909775485, 10.145314506264367),
 ZTERP(46, 8.625, 21.07293766650942, 10.204577116957319),
 ZTERP(47, 8.8125, 21.179648223241604, 10.26209442938877),
 ZTERP(48, 9.0, 21.283146864085744, 10.317880509453964),
 ZTERP(49, 9.1875, 21.383464568599745, 10.371952055228196),
 ZTERP(50, 9.375, 21.4806368974093, 10.424328233996134),
 ZTERP(51, 9.5625, 21.57470315613779, 10.475030231607516),
 ZTERP(52, 9.75, 21.665705682251577, 10.524080868084605),
 ZTERP(53, 9.9375, 21.75368923643436, 10.571504269571129),
 ZTERP(54, 10.125, 21.838700483029058, 10.617325588288882),
 ZTERP(55, 10.3125, 21.920787546510866, 10.661570763475375),
 ZTERP(56, 10.5, 21.999999632972717, 10.704266317363338),
 ZTERP(57, 10.6875, 22.07641564653074, 10.745454779509722),
 ZTERP(58, 10.875, 22.150224726402105, 10.785238096523932),
 ZTERP(59, 11.0625, 22.22162953790755, 10.823725505626062),
 ZTERP(60, 11.25, 22.290817223986857, 10.86101787742598),
 ZTERP(61, 11.4375, 22.35796074179445, 10.89720843635239),
 ZTERP(62, 11.625, 22.42322006822797, 10.932383410436382),
 ZTERP(63, 11.8125, 22.48674328890037, 10.966622618270677),
 ZTERP(64, 12.0, 22.548667583274235, 11.0),
 ZTERP(65, 12.1875, 22.609120117128843, 11.054462997945582),
 ZTERP(66, 12.375, 22.66821885219046, 11.107706329217491),
 ZTERP(67, 12.5625, 22.726073281593223, 11.159828638553334),
 ZTERP(68, 12.75, 22.782785098827088, 11.210921543822228),
 ZTERP(69, 12.9375, 22.838448806947963, 11.261070184875419),
 ZTERP(70, 13.125, 22.893152274056043, 11.310353723988748),
 ZTERP(71, 13.3125, 22.94697724037544, 11.358845802701687),
 ZTERP(72, 13.5, 22.999999781678238, 11.406614959326105),
 ZTERP(73, 13.6875, 23.05229073327846, 11.453725010931631),
 ZTERP(74, 13.875, 23.103916078365743, 11.500235403203867),
 ZTERP(75, 14.0625, 23.154937304047128, 11.54620153121017),
 ZTERP(76, 14.25, 23.205411728111383, 11.591675033788695),
 ZTERP(77, 14.4375, 23.255392799216626, 11.63670406399394),
 ZTERP(78, 14.625, 23.304930372925142, 11.681333537782497),
 ZTERP(79, 14.8125, 23.354070965763114, 11.725605362900958),
 ZTERP(80, 15.0, 23.402857989264615, 11.769558649741234),
 ZTERP(81, 15.1875, 23.451331965764983, 11.81322990575348),
 ZTERP(82, 15.375, 23.49953072753555, 11.856653214850886),
 ZTERP(83, 15.5625, 23.547489600697397, 11.899860403101556),
 ZTERP(84, 15.75, 23.59524157521404, 11.942881191878618),
 ZTERP(85, 15.9375, 23.642817462139327, 11.985743339528258),
 ZTERP(86, 16.125, 23.69024603918687, 12.028472772516372),
 ZTERP(87, 16.3125, 23.737554185587854, 12.071093706924888),
 ZTERP(88, 16.5, 23.784767007115658, 12.11362876108917),
 ZTERP(89, 16.6875, 23.83190795207534, 12.156099060095443),
 ZTERP(90, 16.875, 23.87899891898456, 12.198524332792872),
 ZTERP(91, 17.0625, 23.92606035660762, 12.240923001916406),
 ZTERP(92, 17.25, 23.973111356945793, 12.283312267863775),
 ZTERP(93, 17.4375, 24.02016974173446, 12.325708186622638),
 ZTERP(94, 17.625, 24.06725214295003, 12.368125742301011),
 ZTERP(95, 17.8125, 24.11437407778628, 12.410578914675075),
 ZTERP(96, 18.0, 24.161550018520796, 12.45308074213336),
 ZTERP(97, 18.1875, 24.208793457656917, 12.495643380364556),
 ZTERP(98, 18.375, 24.25611696869415, 12.53827815710687),
 ZTERP(99, 18.5625, 24.30353226285123, 12.580995623251085),
 ZTERP(100, 18.75, 24.351050242039048, 12.623805600564995),
 ZTERP(101, 18.9375, 24.39868104835695, 12.666717226285716),
 ZTERP(102, 19.125, 24.446434110363527, 12.70973899480603),
 ZTERP(103, 19.3125, 24.494318186353194, 12.752878796663194),
 ZTERP(104, 19.5, 24.542341404851644, 12.796143955022174),
 ZTERP(105, 19.6875, 24.590511302526224, 12.839541259829926),
 ZTERP(106, 19.875, 24.638834859692345, 12.883076999803894),
 ZTERP(107, 20.0625, 24.687318533583007, 12.926756992405228),
 ZTERP(108, 20.25, 24.735968289535524, 12.97058661193561),
 ZTERP(109, 20.4375, 24.784789630238162, 13.014570815886153),
 ZTERP(110, 20.625, 24.833787623168355, 13.058714169657108),
 ZTERP(111, 20.8125, 24.882966926344605, 13.1030208697583),
 ZTERP(112, 21.0, 24.932331812504856, 13.14749476559194),
 ZTERP(113, 21.1875, 24.98188619181599, 13.192139379912124),
 ZTERP(114, 21.375, 25.031633633211613, 13.236957928048483),
 ZTERP(115, 21.5625, 25.081577384447666, 13.28195333597474),
 ZTERP(116, 21.75, 25.13172039095986, 13.327128257297753),
 ZTERP(117, 21.9375, 25.18206531360005, 13.372485089236634),
 ZTERP(118, 22.125, 25.23261454532373, 13.418025987656853),
 ZTERP(119, 22.3125, 25.283370226895837, 13.463752881219932),
 ZTERP(120, 22.5, 25.33433426167653, 13.509667484704299),
 ZTERP(121, 22.6875, 25.385508329545768, 13.555771311550206),
 ZTERP(122, 22.875, 25.436893900019904, 13.602065685676788),
 ZTERP(123, 23.0625, 25.488492244610985, 13.648551752616818),
 ZTERP(124, 23.25, 25.540304448475517, 13.69523049001129),
 ZTERP(125, 23.4375, 25.592331421396445, 13.742102717503393),
 ZTERP(126, 23.625, 25.64457390813891, 13.78916910606818),
 ZTERP(127, 23.8125, 25.697032498218274, 13.836430186812816),
};
// Float64 *pzterp = zterp_48;
#undef ZTERP

#if !USE_CUBIC_SPLINE
Float64 TCrescendo_bark_channel::gain_at_bin(int bix) {
    Float64 cell = (get_pZTerp())[bix];
    UInt32  ix = (UInt32)cell;
    Float64 frac = cell - ix;
    Float64 g0 = (ix > 0) ? m_gains[ix-1] : 0.0;
    Float64 g1 = m_gains[ix];
    Float64 g  = frac * g1 + (1.0 - frac) * g0;
    return ampl20(g);
}
#endif

void TCrescendo_bark_channel::compute_ft_gains()
{
#if USE_CUBIC_SPLINE
    compute_spline();
#endif
    
    Float64 *pfilter = get_Filter();
    
    int ix = get_bin16k();
    zero_FT_cells(pfilter, ix, get_hblksize() - ix);
    set_FT_Nyquist(pfilter, 0.0);
    while(--ix >= 0)
        set_FT_cell(pfilter, ix, gain_at_bin(ix), 0.0);
}

void TCrescendo::fill_bark_interpolation_tables()
{
    // The same filters are used for 44.1/88.2 and for 48/96
    // since, at the higher sample rates, the FFT size is also doubled,
    // leaving the FFT cell width the same in low/high situations.
    float rate = get_sampleRate();
    if(rate > 50e3f)
        rate *= 0.5f;
    if(rate < 46e3f)
    {
        set_pBarkFilts(bark_filters_44);
        set_pGainInterp(ginterp_44);
        set_pZTerp(zterp_44);
    }
    else
    {
        set_pBarkFilts(bark_filters_48);
        set_pGainInterp(ginterp_48);
        set_pZTerp(zterp_48);
    }
    for(int ix = 0; ix < 128; ++ix) {
        if((get_pGainInterp())[ix].fkHz >= 16.0) {
            set_bin16k(ix);
            break;
        }
    }
}

// ===================================================================================

#define COFFS_G1(chan, fkHz, zbark, ath, A0, A1, A2, B1, C0, C1, C2, D1)  {A0, A1, A2, B1}
#define COFFS_G2(chan, fkHz, zbark, ath, A0, A1, A2, B1, C0, C1, C2, D1)  {C0, C1, C2, D1}

Float64 dbel_phon_coffs[11][4] = {
    // conversion of dB Elevation above ATH to Phon
    // Minimax approx for (0 100) dB -> (-1 1)
    // index, fkHz, zBark, ATH, a0, a1, a2, b1 in y = (a0 + a1*x + a2*x^2)/(1 + b1*x)
    COFFS_G1( 0,   0.25,  2.00,   7.54,  48.21, 87.53, 39.39,  0.62,  51.52, 82.50, 30.96,  0.77),
    COFFS_G1( 1,   0.5,   4.44,   1.48,  48.82, 84.03, 35.23,  0.65,  51.12, 83.88, 32.75,  0.71),
    COFFS_G1( 2,   0.75,  6.37,  -0.20,  49.57, 83.43, 33.86,  0.66,  50.43, 83.74, 33.31,  0.68),
    COFFS_G1( 3,   1.0,   8.00,  -0.01,  49.98, 83.41, 33.43,  0.67,  50.02, 83.47, 33.45,  0.67),
    COFFS_G1( 4,   1.5,  10.58,  -0.37,  46.64, 77.96, 31.30,  0.63,  53.47, 88.71, 35.24,  0.69),
    COFFS_G1( 5,   2.0,  12.52,  -4.11,  46.40, 77.66, 31.27,  0.64,  53.73, 88.93, 35.19,  0.69),
    COFFS_G1( 6,   3.0,  15.22,  -8.77,  45.34, 76.22, 30.89,  0.63,  54.85, 90.43, 35.56,  0.70),
    COFFS_G1( 7,   4.0,  17.00,  -8.49,  44.61, 75.09, 30.49,  0.62,  55.65, 91.55, 35.89,  0.70),
    COFFS_G1( 8,   6.0,  19.18,   1.55,  46.81, 78.11, 31.30,  0.64,  53.30, 88.42, 35.12,  0.69),
    COFFS_G1( 9,   8.0,  20.69,   9.83,  48.05, 81.32, 33.27,  0.65,  51.93, 85.78, 33.84,  0.69),
    COFFS_G1(10,  12.0,  22.55,   8.83,  47.52, 85.88, 38.42,  0.62,  52.22, 83.75, 31.51,  0.76),
};

Float64 phon_dbel_coffs[11][4] = {
    // conversion of Phon to dB Elevation above ATH
    // Minimax approx for (0 100) dB -> (-1 1)
    // index, fkHz, zBark, ATH, a0, a1, a2, b1 in y = (a0 + a1*x + a2*x^2)/(1 + b1*x)
    COFFS_G2( 0,   0.25,  2.00,    7.54,  48.21, 87.53, 39.39,  0.62,  51.52, 82.50, 30.96, 0.77),
    COFFS_G2( 1,   0.5,   4.44,    1.48,  48.82, 84.03, 35.23,  0.65,  51.12, 83.88, 32.75, 0.71),
    COFFS_G2( 2,   0.75,  6.37,   -0.20,  49.57, 83.43, 33.86,  0.66,  50.43, 83.74, 33.31, 0.68),
    COFFS_G2( 3,   1.0,   8.00,   -0.01,  49.98, 83.41, 33.43,  0.67,  50.02, 83.47, 33.45, 0.67),
    COFFS_G2( 4,   1.5,  10.58,   -0.37,  46.64, 77.96, 31.30,  0.63,  53.47, 88.71, 35.24, 0.69),
    COFFS_G2( 5,   2.0,  12.52,   -4.11,  46.40, 77.66, 31.27,  0.64,  53.73, 88.93, 35.19, 0.69),
    COFFS_G2( 6,   3.0,  15.22,   -8.77,  45.34, 76.22, 30.89,  0.63,  54.85, 90.43, 35.56, 0.70),
    COFFS_G2( 7,   4.0,  17.00,   -8.49,  44.61, 75.09, 30.49,  0.62,  55.65, 91.55, 35.89, 0.70),
    COFFS_G2( 8,   6.0,  19.18,    1.55,  46.81, 78.11, 31.30,  0.64,  53.30, 88.42, 35.12, 0.69),
    COFFS_G2( 9,   8.0,  20.69,    9.83,  48.05, 81.32, 33.27,  0.65,  51.93, 85.78, 33.84, 0.69),
    COFFS_G2(10,  12.0,  22.55,    8.83,  47.52, 85.88, 38.42,  0.62,  52.22, 83.75, 31.51, 0.76),
};
#undef COFFS_G1
#undef COFFS_G2

// ---------------------------------------------------------------------------------------
// New (6/20) dBSPL <-> Phon Conversions ISO226

Float64 minimax_rational(Float64 val, Float64* coffs) {
    // val limited to (0 100) dB
    Float64 x = 0.02 * (val - 50.0);
    if(x < -1.0)
        x = -1.0;
    else if(x > 1.0)
        x = 1.0;
    return (coffs[0] + x * (coffs[1] + x * coffs[2])) / (1.0 + x * coffs[3]);
}

Float64 dbel_to_phon(UInt32 zbark, Float64 dbspl) {
    return minimax_rational(dbspl, dbel_phon_coffs[zbark]);
}

Float64 phon_to_dbel(UInt32 zbark, Float64 phon) {
    return minimax_rational(phon, phon_dbel_coffs[zbark]);
}

// ------------------------------------------------------------------------
